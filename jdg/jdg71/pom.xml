<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <!-- Parent -->
    <parent>
        <groupId>org.jboss.ce.testsuite</groupId>
        <artifactId>jdg-ce-testsuite</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <!-- Model Version -->
    <modelVersion>4.0.0</modelVersion>

    <!-- Artifact Configuration -->
    <artifactId>jdg71-ce-testsuite</artifactId>
    <packaging>jar</packaging>
    <name>JDG 7.1 CE Testsuite</name>
    <description>JDG 7.1 Cloud Enablement Testsuite</description>

    <properties>
        <version.spymemcached>2.8.1</version.spymemcached>
        <version.commons.collections>3.2.2.redhat-2</version.commons.collections>
        <version.org.infinispan>8.4.0.Final-redhat-2</version.org.infinispan>
    </properties>

    <dependencies>

        <!-- Tests - add any external existing tests here -->

        <!-- TODO -->

        <!-- EAP testunit deps -->

        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>

        <!-- Test Utils -->

        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-jmx</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-ce-shrinkwrap</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-ce-fabric8</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-ce-cube</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-arquillian-container-remote</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- JDG -->

        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-client-hotrod</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-query-dsl</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-remote-query-client</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.google.code.simple-spring-memcached</groupId>
            <artifactId>spymemcached</artifactId>
            <version>${version.spymemcached}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>${version.commons.collections}</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-dependencies</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeGroupIds>org.jboss</includeGroupIds>
                            <includeTypes>test-jar</includeTypes>
                            <includeScope>test</includeScope>
                            <outputDirectory>${project.build.directory}/test-classes</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <runOrder>alphabetical</runOrder>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <trimStackTrace>false</trimStackTrace>
                    <forkMode>once</forkMode>
                    <includes>
                        <include>org/jboss/**/*Test.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/JdgQueryTest.java</exclude>
                    </excludes>
                    <systemPropertyVariables>
                        <!-- Custom DNS resolver for OpenShift routes -->
                        <sun.net.spi.nameservice.provider.1>dns,CEArquillianNameService</sun.net.spi.nameservice.provider.1>
                        <sun.net.spi.nameservice.provider.2>default</sun.net.spi.nameservice.provider.2>
                        <kubernetes.master>${kubernetes.master}</kubernetes.master>
                        <kubernetes.auth.token>${kubernetes.auth.token}</kubernetes.auth.token>
                        <arq.extension.openshift.routerHost>${router.hostIP}</arq.extension.openshift.routerHost>
                        <template.repository>jboss-openshift</template.repository>
                        <template.branch>master</template.branch>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
